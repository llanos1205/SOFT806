name: Build and Deploy
permissions:
  contents: read
  issues: read
  checks: write
  pull-requests: write
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 7.x

      - name: Restore dependencies
        run: dotnet restore --verbosity minimal

      - name: Build application
        run: dotnet build SOFT806.WebApp --configuration Release --no-restore --verbosity minimal --property WarningLevel=0

      - name: Run tests
        run: dotnet test SOFT806.Tests --no-restore --configuration Release --verbosity minimal --logger "trx;LogFileName=test-results/test-results.trx"

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: |
            SOFT806.Tests/**/test-results.trx

      - name: Publish application
        run: dotnet publish SOFT806.WebApp --configuration Release --output ./publish --no-restore  --no-build --verbosity minimal

      - name: Archive artifacts
        uses: actions/upload-artifact@v2
        with:
          name: webapp-artifact
          path: ./publish
  package:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Build
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        run: echo ${{ secrets.DOCKER_TOKEN }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Build and push Docker api
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ vars.DOCKER_REGISTRY }}/soft806-api:latest

  deploy:
    runs-on: self-hosted
    needs:
      - package
      - build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to DockerHub
        run: |
          rm ~/.docker/config.json
          echo ${{ secrets.DOCKER_TOKEN }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Run docker compose
        run: |
          docker-compose stop --file docker-compose.dev.yaml
          docker-compose rm -f --file docker-compose.dev.yaml
          docker-compose pull --file docker-compose.dev.yaml
          docker-compose up -d  --file docker-compose.dev.yaml